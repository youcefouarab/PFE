tosca_definitions_version: tosca_2_0

metadata:
  template_name: tosca-normative-data-types
  template_author: TOSCA TC
  template_version: 2.0.0

description: >-
  This TOSCA definitions document contains the TOSCA Simple Profile
  data types.

data_types:

  Root:
    description: >-
      The TOSCA root Data Type all other TOSCA base Data Types derive
      from.

  json:
    derived_from: string
    description: >-
      The json type defines a string that containst data in the
      JavaScript Object Notation (JSON) format.

  xml:
    derived_from: string
    description: >-
      The xml type defines a string that containst data in the
      Extensible Markup Language (XML) format.

  Credential:
    derived_from: Root
    description: >-
      The Credential type is a complex TOSCA data Type used when
      describing authorization credentials used to access network
      accessible resources.
    properties:
      protocol:
        type: string
        description: >-
          The optional protocol name.
        required: false
      token_type:
        type: string
        description: >-
          The required token type.
        default: password
      token:
        type: string
        description: >-
          The required token used as a credential for authorization or
          access to a networked resource.
      keys:
        type: map
        description: >-
          The optional list of protocol-specific keys or assertions.
        required: false
        entry_schema:
          type: string
      user:
        type: string
        description: >-
          The optional user (name or ID) used for non-token based
          credentials.
        required: false

  TimeInterval: 
    derived_from: Root
    description: >-
      The TimeInterval type describes a period of time using the YAML
      ISO 8601 format to declare the start and end times.
    properties:
      start_time: 
        type: timestamp
        description: >-
          The inclusive start time for the time interval.
        required: true
      end_time: 
        type: timestamp
        description: >-
          The inclusive end time for the time interval.
        required: true

  network.NetworkInfo:
    derived_from: Root
    description: >-
      The Network type describes logical network information.
    properties:  
      network_name:
        type: string
        description: >-
          The name of the logical network. e.g., “public”, “private”,
          “admin”. etc.
      network_id:
        type: string
        description: >-
          The unique ID of for the network generated by the network
          provider.
      addresses:
        type: list
        description: >-
          The list of IP addresses assigned from the underlying
          network.
        entry_schema:
          type: string

  network.PortInfo:
    derived_from: Root
    description: >-
      The PortInfo type describes network port information.
    properties:  
      port_name:
        type: string
        description: >-
          The logical network port name.
      port_id:
        type: string
        description: >-
          The unique ID for the network port generated by the network
          provider.
      network_id:
        type: string
        description: >-
          The unique ID for the network.
      mac_address:
        type: string
        description: >-
          The unique media access control address (MAC address)
          assigned to the port.
      addresses:
        type: list
        description: >-
          The list of IP address(es) assigned to the port.
        entry_schema:
          type: string

  network.PortDef:
    derived_from: integer
    description: >-
      The PortDef type defines a network port.
    constraints:
      - in_range: [ 1, 65535 ]

  network.PortSpec:
    derived_from: Root
    description: >-
      The PortSpec type describes port specifications for a network
      connection.
    properties:  
      protocol:
        type: string
        description: >-
          The required protocol used on the port.
        required: true
        default: tcp
        constraints:
          - valid_values: [ udp, tcp, igmp ]
      source:
        type: network.PortDef
        description: >-
          The optional source port.          
      source_range:
        type: range
        description: >-
          The optional range for the source port. 
        constraints:
          - in_range: [ 1, 65535 ]
      target: 
        type: network.PortDef
        description: >-
          The optional target port.  
      target_range:
        type: range
        description: >-
          The optional range for the target port.
        constraints:
          - in_range: [ 1, 65535 ]
